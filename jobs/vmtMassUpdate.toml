type              = "webhook"
schemaVersion     = 3
evmChainID        = 4
name              = "VMT Mass Update"
contractAddress   = "0x554846E877e00664f20865E00934B9A4D78Bc9D9"
fromAddress       = "0x554846E877e00664f20865E00934B9A4D78Bc9D9"
observationSource = """

encode_check_tx    [type="ethabiencode"
                    abi="checkMassUpdate()"
                    data=""]

check_tx           [type="ethcall"
                    failEarly=true
                    extractRevertReason=true
                    evmChainID="$(jobSpec.evmChainID)"
                    contract="$(jobSpec.contractAddress)"
                    data="$(encode_check_tx)"]

decode_check_tx    [type="ethabidecode" abi="uint[10] leaves, uint[20] memory filledSubtrees"]

calculate_subtrees [type="bridge"
                    name="vmtMassUpdate" 
                    requestData="{\\"leaves\\": $(decode_check_tx.leaves), \\"filledSubtrees\\": $(decode_check_tx.filledSubtrees)}"]

parse              [type="jsonparse" path="data" data="$(calculate_subtrees)"]

encode_perform_tx  [type="ethabiencode"
                    abi="performMassUpdate(uint[8] calldata proof, uint[20] calldata newFilledSubtrees)"
                    data="{\\"proof\\": $(parse.proof), \\"newFilledSubtrees\\":$(parse.filledSubtrees)}"]

perform_tx         [type="ethtx"
                    minConfirmations=0
                    to="$(jobSpec.contractAddress)"
                    from="[$(jobSpec.fromAddress)]"
                    evmChainID="$(jobSpec.evmChainID)"
                    data="$(encode_perform_tx)"
                    txMeta="{"jobID":$(jobSpec.jobID)}"]

encode_check_tx -> check_tx -> decode_check_tx -> calculate_subtrees -> parse -> encode_perform_tx -> perform_tx
"""